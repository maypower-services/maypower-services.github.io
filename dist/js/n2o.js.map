{"version":3,"sources":["utf8.js","bert.js","heart.js","ieee754.js","n2o.js","ftp.js","nitro.js"],"names":[],"mappingspvfile":"n2o.js","sourcesContent":["\n// N2O UTF-8 Support\n\nfunction utf8_dec(ab) { return (new TextDecoder()).decode(ab); }\nfunction utf8_enc(ab) { return (new TextEncoder(\"utf-8\")).encode(ab); }\nfunction utf8_arr(ab) { if (!(ab instanceof ArrayBuffer)) ab = new Uint8Array(utf8_enc(ab)).buffer;\n                        return utf8_dec(ab); }\n","\n// API\n\nfunction tuple() { return { t: 104, v: Array.apply(null, arguments) }; }\nfunction list() { return { t: 108, v: Array.apply(null, arguments) }; }\nfunction map() { return { t: 116, v: Array.apply(null, arguments) }; }\nfunction atom(o) { return { t: 100, v: utf8_enc(o) }; }\nfunction string(o) { return { t: 107, v: utf8_enc(o) }; }\nfunction float(o) { return { t: 70, v: o }; }\nfunction number(o) {\n  var s, isInteger = (o % 1 === 0);\n  if (isInteger && o >= 0 && o < 256) { return { t: 97, v: o };  }\n  if (isInteger && o >= -134217728 && o <= 134217727) { return {t: 98, v: o}; }\n  return {t: 110, v: o}; }\nfunction bin(o) {\n  return { t: 109, v: o instanceof ArrayBuffer ? new Uint8Array(o) :\n                      o instanceof Uint8Array  ? o : utf8_enc(o) }; }\n\n// ENCODER\n\nfunction enc(o) { return fl([131, ein(o)]); }\nfunction ein(o) { return Array.isArray(o) ? en_108({ t: 108, v: o }) : eval('en_' + o.t)(o); }\nfunction en_undefined(o) { return [106]; }\nfunction en_70(o) {\n  var x = Array(8).fill(0).flat();\n  write_Float(x,o.v,0,false,52,8);\n  return [70].concat(x);\n}\nfunction en_97(o) { return [97, o.v]; }\nfunction en_98(o) { return [98, o.v >>> 24, (o.v >>> 16) & 255, (o.v >>> 8) & 255, o.v & 255]; }\nfunction en_99(o) {\n  var obj = o.v.toExponential(20),\n      match = /([^e]+)(e[+-])(\\d+)/.exec(obj),\n      exponentialPart = match[3].length == 1 ? \"0\" + match[3] : match[3],\n      num = Array.from(bin(match[1] + match[2] + exponentialPart).v);\n  return [o.t].concat(num).concat(Array(31 - num.length).fill(0).flat());\n}\nfunction en_106(o) { return [106]; }\nfunction en_115(o) { return [115, o.v.length, ar(o)]; }\nfunction en_119(o) { return [119, ar(o).length, ar(o)]; }\nfunction en_118(o) { return [118, ar(o).length >>> 8, ar(o).length & 255, ar(o)]; }\nfunction en_100(o) { return [100, o.v.length >>> 8, o.v.length & 255, ar(o)]; }\nfunction en_107(o) { return [107, o.v.length >>> 8, o.v.length & 255, ar(o)]; }\nfunction en_104(o) {\n  var l = o.v.length, r = [];\n  for (var i = 0; i < l; i++)r[i] = ein(o.v[i]);\n  return [104, l, r];\n}\nfunction unilen(o) {\n  return (o.v instanceof ArrayBuffer || o.v instanceof Uint8Array) ? o.v.byteLength :\n         (new TextEncoder().encode(o.v)).byteLength;\n}\n\nfunction en_109(o) {\n  var l = unilen(o);\n  return [109, l >>> 24, (l >>> 16) & 255, (l >>> 8) & 255, l & 255, ar(o)];\n}\nfunction en_108(o) {\n  var l = o.v.length, r = [];\n  for (var i = 0; i < l; i++)r.push(ein(o.v[i]));\n  return o.v.length == 0 ? [106] :\n         [108, l >>> 24, (l >>> 16) & 255, (l >>> 8) & 255, l & 255, r, 106];\n}\nfunction en_116(o) {\n  var l=o.v.length,x=[],r = [];\n  for (var i = 0; i < l; i++) r.push([ein(o.v[i].k),ein(o.v[i].v)]);\n  x = [116, l >>> 24, (l >>> 16) & 255, (l >>> 8) & 255, l & 255];\n  return o.v.length == 0 ? x : [x,r];\n}\nfunction en_110(o) {\n  var s=int_to_bytes(o.v); return [110,s.length,(o.v<0)?1:0].concat(s);\n}\n\n// DECODER\n\nfunction nop(b) { return []; };\nfunction big(b) {\n  var sk = b == 1 ? sx.getUint8(ix++) : sx.getInt32((a = ix, ix += 4, a));\n  var ret = 0, sig = sx.getUint8(ix++), count = sk;\n  while (count-- > 0) { ret = 256 * ret + sx.getUint8(ix + count); }\n  ix += sk; return ret * (sig == 0 ? 1 : -1);\n}\nfunction int(b) {\n  return b == 1 ? sx.getUint8(ix++) : sx.getInt32((a = ix, ix += 4, a));\n}\nfunction dec(d) {\n  sx = new DataView(d); ix = 0;\n  if (sx.getUint8(ix++) !== 131) throw (\"BERT?\");\n  return din();\n}\nfunction str(b) {\n  var dv, sz = (b==2?sx.getUint16(ix):(b==1?sx.getUint8(ix):sx.getUint32(ix)));\n  ix += b; var r = sx.buffer.slice(ix, ix += sz);\n  return utf8_arr(r);\n}\nfunction run(b) {\n  var sz = (b == 1 ? sx.getUint8(ix) : sx.getUint32(ix)), r = []; ix += b;\n  for (var i = 0; i < sz; i++) r.push(din());\n  return r;\n}\nfunction rut(b) {\n  var sz = (b == 1 ? sx.getUint8(ix) : sx.getUint32(ix)), r = []; ix += b;\n  for (var i = 0; i < sz; i++) r.push(din()); din();\n  return r;\n}\nfunction dic(b) {\n  var sz = sx.getUint32(ix), r = []; ix += 4;\n  for (var i = 0; i < sz; i++) r.push({k:din(),v:din()});\n  return r;\n}\nfunction iee(x) {\n  return read_Float(new Uint8Array(sx.buffer.slice(ix,ix+=8)),0,false,52,8);\n}\nfunction flo(x) {\n  return parseFloat(utf8_arr(sx.buffer.slice(ix, ix += 31)));\n}\nfunction arr(b) {\n  var dv, sz = sx.getUint16(ix); ix += b;\n  return new Uint8Array(sx.buffer.slice(ix, ix += sz));\n}\nfunction ref(cr) {\n  var adj = sx.getUint8(ix++), d; adj += sx.getUint8(ix++);\n  d = din(); ix += cr+adj*4; return d;\n}\n\nfunction din() {\n  var c = sx.getUint8(ix++), x;\n  switch (c) {\n    case  97: x = [int, 1]; break; case  98: x = [int, 4]; break;\n    case  99: x = [flo, 0]; break; case  70: x = [iee, 0]; break;\n    case 100: x = [str, 2]; break; case 104: x = [run, 1]; break;\n    case 107: x = [arr, 2]; break; case 108: x = [rut, 4]; break;\n    case 109: x = [str, 4]; break; case 110: x = [big, 1]; break;\n    case 111: x = [big, 4]; break; case 115: x = [str, 1]; break;\n    case 118: x = [str, 2]; break; case 119: x = [str, 1]; break;\n    case 105: x = [run, 4]; break; case 116: x = [dic, 4]; break;\n     case 90: x = [ref, 4]; break; case 114: x = [ref, 1]; break;\n    default:  x = [nop, 0];\n  } return { t: c, v: x[0](x[1]) };\n}\n\n// HELPERS\n\nfunction int_to_bytes(Int) {\n  if (Int % 1 !== 0) return [0];\n  var isNegative, OriginalInt, i, Rem, s = [];\n  isNegative = (Int < 0);\n  if (isNegative) { Int = - Int - 1; }\n  OriginalInt = Int;\n  var length = 0;\n  while (Int !== 0) { Rem = Int % 256;\n    if (isNegative) { Rem = 255 - Rem; }\n    s.push(Rem); Int = Math.floor(Int / 256); length++; }\n  if (Int > 0) { throw (\"Argument out of range: \" + OriginalInt); }\n  return s;\n}\nfunction uc(u1, u2) {\n  if (u1.byteLength == 0) return u2; if (u2.byteLength == 0) return u1;\n  var a = new Uint8Array(u1.byteLength + u2.byteLength);\n  a.set(u1, 0); a.set(u2, u1.byteLength); return a;\n}\nfunction ar(o) {\n  return o.v instanceof ArrayBuffer ? new Uint8Array(o.v) : o.v instanceof Uint8Array ? o.v :\n    Array.isArray(o.v) ? new Uint8Array(o.v) : new Uint8Array(utf8_enc(o.v));\n}\nfunction fl(a) {\n  return a.reduce(function (f, t) {\n    return uc(f, t instanceof Uint8Array ? t :\n      Array.isArray(t) ? fl(t) : new Uint8Array([t]));\n  }, new Uint8Array());\n}\n","\n// WebSocket Transport\n\n$ws = { heart: true, interval: 5000,\n        creator: function(url) { return window.WebSocket ? new window.WebSocket(url) : false; },\n        onheartbeat: function() { this.channel.send('PING');\n                                  } };\n\n// N2O Reliable Connection\n\n$conn = { onopen: nop, onmessage: nop, onclose: nop, onconnect: nop,\n          send:  function(data)   { if (this.port.channel) this.port.channel.send(data); },\n          close: function()       { if (this.port.channel) this.port.channel.close(); } };\n\nct = 0;\ntransports = [ $ws ];\nheartbeat = null;\nreconnectDelay = 1000;\nmaxReconnects = 100;\n\nfunction nop() { }\nfunction bullet(url) { $conn.url = url; return $conn; }\nfunction xport() { return maxReconnects <= ct ? false : transports[ct++ % transports.length]; }\nfunction reconnect() { setTimeout(function() { connect(); }, reconnectDelay); }\nfunction next() { $conn.port = xport(); return $conn.port ? connect() : false; }\nfunction connect() {\n    $conn.port.channel = $conn.port.creator($conn.url);\n    if (!$conn.port.channel) return next();\n    $conn.port.channel.binaryType = \"arraybuffer\";\n    $conn.port.channel.onmessage = function(e) { $conn.onmessage(e); };\n    $conn.port.channel.onopen = function() {\n        if ($conn.port.heart) heartbeat = setInterval(function(){$conn.port.onheartbeat();}, $conn.port.interval);\n        $conn.onopen();\n        $conn.onconnect(); };\n    $conn.port.channel.onclose = function() { $conn.onclose(); clearInterval(heartbeat); reconnect(); };\n    return $conn; }\n","\nfunction read_Float(buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n  i += d\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nfunction write_Float(buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n  value = Math.abs(value)\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n  buffer[offset + i - d] |= s * 128\n}\n","\n// N2O CORE\n\nvar active = false,\n    debug = false,\n    session = \"site-sid\",\n    protocol = window.location.protocol == 'https:' ? \"wss://\" : \"ws://\",\n    querystring = window.location.pathname + window.location.search;\n\nfunction client() { return ''; }\nfunction token()  { return sessionStorage.getItem(\"token\") || tokenC(); }\nfunction tokenC() { var c = document.cookie.match(new RegExp('(^| )X-Auth-Token=([^;]+)')); return (c ? c[2] : ''); }\nfunction qi(name) { return document.getElementById(name); }\nfunction qs(name) { return document.querySelector(name); }\nfunction qa(name) { return document.querySelectorAll(name); }\nfunction qn(name) { return document.createElement(name); }\nfunction is(x, num, name) { return x == undefined ? false : (x.t == 106 ? false : (x.v.length === num && x.v[0].v === name)); }\nfunction co(name) { match = document.cookie.match(new RegExp(name + '=([^;]+)')); return match ? match[1] : undefined; }\n\nfunction N2O_start() {\n    console.log(\"domain\", domain);\n    console.log(\"host\", host);\n    document.cookie = 'X-Auth-Token=' + token() + '; path=/;' + (host == 'localhost' ? '' : ' domain=' + domain +';');\n    ws = new bullet(protocol + host + (port==\"\"?\"\":\":\"+port) + \"/ws\" + querystring);\n    ws.onmessage = function (evt) { // formatters loop\n    for (var i=0;i<protos.length;i++) { p = protos[i]; if (p.on(evt, p.do).status == \"ok\") return; } };\n    ws.onopen = function() { if (!active) { ws.send('N2O,'+token()); console.log('WS Connect'); active=true; } };\n    ws.onclose = function() { active = false; console.log('WS Disconnect'); }; next(); }\n\n/// N2O Protocols\n\nvar $io = {}; $io.on = function onio(r, cb) {\n    if (is(r, 3, 'io')) {\n        if (r.v[2].v != undefined && r.v[2].v[1] != undefined && r.v[2].v.length == 2 &&\n           (r.v[2].v[0].v == \"Token\" || r.v[2].v[0].v == \"Auth\"))\n         { sessionStorage.setItem(\"token\",utf8_arr(r.v[2].v[1].v)); }\n        if (typeof cb == 'function') cb(r.v[2]);\n        var evalex = utf8_arr(r.v[1].v);\n        if (debug) console.log(evalex);\n        try { eval(evalex); return { status: \"ok\" }; }\n        catch (e) { console.log(evalex);\n                    console.error(\"Eval failed:\",e); \n                    return { status: '' }; }\n    } else return { status: '' };\n}\n\nvar $file = {}; $file.on = function onfile(r, cb) {\n    if (is(r, 10, 'ftpack')) {\n        if (typeof cb == 'function') cb(r); return { status: \"ok\" };\n    } else return { status: '' };\n}\n\n// BERT Formatter\n\nvar $bert = {}; $bert.protos = [$io, $file]; $bert.on = function onbert(evt, cb) {\n    if (ArrayBuffer.prototype.isPrototypeOf(evt.data) &&\n       (evt.data.byteLength > 0)) {\n        try {\n            var erlang = dec(evt.data);\n            if (typeof cb == 'function') cb(erlang);\n            for (var i = 0; i < $bert.protos.length; i++) {\n                var p = $bert.protos[i];\n                var ret = p.on(erlang, p.do);\n                if (ret != undefined && ret.status == \"ok\") return ret;\n            }\n        } catch (e) { console.error(e); }\n        return { status: \"ok\" };\n    } else return { status: \"error\", desc: \"data\" };\n}\n\nvar protos = [$bert];\n","\n// N2O File Transfer Protocol\n\nfunction uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n  var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8); return v.toString(16); });\n}\n\nvar ftp = {\n    queue: [],\n    init: function (file) {\n        var item = {\n            id: uuid(),\n            status: 'init',\n            autostart: ftp.autostart || false,\n            name: ftp.filename || file.name,\n            sid: ftp.sid || token(), // co(session),\n            meta: ftp.meta || bin(client()),\n            offset: ftp.offset || 0,\n            block: 1,\n            total: file.size,\n            file: file\n        };\n        ftp.queue.push(item);\n        ftp.send(item, '', 1);\n        return item.id;\n    },\n    start: function (id) {\n        if (ftp.active) { id && (ftp.item(id).autostart = true); return false; }\n        var item = id ? ftp.item(id) : ftp.next();\n        if (item) { ftp.active = true; ftp.send_slice(item); }\n    },\n    stop: function (id) {\n        var item = ftp.item(id);\n        var index = ftp.queue.indexOf(item);\n        ftp.queue.splice(index, 1);\n        ftp.active = false;\n        ftp.start();\n    },\n    send: function (item, data) {\n        ws.send(enc(tuple(atom('ftp'),\n            bin(item.id),\n            bin(item.sid),\n            bin(item.name),\n            item.meta,\n            number(item.total),\n            number(item.offset),\n            number(item.block || data.byteLength),\n            bin(data),\n            bin(item.status || 'send')\n        )));\n    },\n    send_slice: function (item) {\n        this.reader = new FileReader();\n        this.reader.onloadend = function (e) {\n            var res = e.target, data = e.target.result;\n            if (res.readyState === FileReader.DONE && data.byteLength >= 0) {\n                ftp.send(item, data);\n            }\n        };\n        this.reader.readAsArrayBuffer(item.file.slice(item.offset, item.offset + item.block));\n    },\n    item: function (id) { return ftp.queue.find(function (item) { return item && item.id === id; }); },\n    next: function () { return ftp.queue.find(function (next) { return next && next.autostart }); }\n};\n\n$file.progress = function onprogress(offset,total) {\n    var x = qi('ftp_status'); if (x) x.innerHTML = offset;\n};\n\n$file.do = function (rsp) {\n    var total = rsp.v[5].v, offset = rsp.v[6].v, block = rsp.v[7].v, status = utf8_arr(rsp.v[9].v);\n    switch (status) {\n        case 'init':\n            if(block == 1) return;\n            var item = ftp.item(utf8_arr(rsp.v[1].v)) || '0';\n            item.offset = offset;\n            item.block = block;\n            item.name = utf8_arr(rsp.v[3].v);\n            item.status = undefined;\n            if (item.autostart) ftp.start(item.id);\n            break;\n        case 'send':\n            $file.progress(offset,total);\n            var item = ftp.item(utf8_arr(rsp.v[1].v));\n            item.offset = offset;\n            item.block = block;\n            (block > 0 && ftp.active) ? ftp.send_slice(item) : ftp.stop(item.id)\n            break;\n        case 'relay': debugger; if (typeof ftp.relay === 'function') ftp.relay(rsp); break;\n    }\n};\n","// Nitrogen Compatibility Layer\n\nfunction unbase64(base64) {\n    var binary_string = window.atob(base64);\n    var len = binary_string.length;\n    var bytes = new Uint8Array(len);\n    for (var i = 0; i < len; i++) bytes[i] = binary_string.charCodeAt(i);\n    return bytes.buffer;\n}\n\n// Nitrogen Compatibility Layer\n\nfunction direct(term) { ws.send(enc(tuple(atom('direct'),term))); }\nfunction validateSources() { return true; }\nfunction querySourceRaw(Id) {\n    var val, el = document.getElementById(Id);\n    if (!el) {\n       val = qs('input[name='+Id+']:checked'); val = val ? val.value : \"\";\n    } else switch (el.tagName) {\n        case 'FIELDSET':\n            val = qs('[id=\"'+Id+'\"]:checked'); val = val ? val.value : \"\"; break;\n        case 'INPUT':\n            switch (el.getAttribute(\"type\")) {\n                case 'radio': val = qs('input[name='+Id+']:checked'); val = val ? val.value : \"\"; break;\n                case 'checkbox': val = qs('input[id='+Id+']:checked'); val = val ? val.value : \"\"; break;\n                case 'date': val = Date.parse(el.value);  val = val && new Date(val) || \"\"; break;\n                case 'calendar': val = pickers[el.id]._d || \"\"; break;\n                case 'comboLookup': case 'hidden':\n                    if (el.hasAttribute('data-bind')) {\n                        val = { 'text' : el.value, 'bind' : el.getAttribute('data-bind')};\n                    } else {\n                        val = el.value;\n                    }\n                    break;\n                default: var edit = el.contentEditable;\n                    if (edit && edit === 'true') val = el.innerHTML;\n                    else val = el.value;\n            }\n            break;\n        default:\n            if (el.getAttribute('data-vector-input')) {\n                val = querySourceRaw(el.children[1].id);\n            } else if (el.getAttribute('data-edit-input')) {\n                val = querySourceRaw(el.children[0].children[0].children[0].id);\n            } else if (el.getAttribute('data-sortable-list')) {\n                val = getSortableValues('#' + el.id);\n            } else if (el.contentEditable === 'true') {\n                val = el.innerHTML;\n            } else {\n                val = el.value;\n                switch (val) {\n                    case \"true\": val = new Boolean(true); break;\n                    case \"false\": val = new Boolean(false); break;\n                }\n            }\n    }\n    return val;\n}\n\nfunction querySourceConvert(qs) {\n    if (qs && qs.hasOwnProperty('text') && qs.hasOwnProperty('bind')) {\n        return dec(unbase64(qs.bind)); }\n    else if (qs instanceof Date) {\n        return tuple(number(qs.getFullYear()),\n                     number(qs.getMonth() + 1),\n                     number(qs.getDate())); }\n    else if (qs instanceof Boolean) {\n        return atom(qs.valueOf()); }\n    else if (qs instanceof Array) {\n        return list.apply(null, qs.map(querySourceConvert)); }\n    else { return bin(qs); }\n}\n\nfunction querySource(Id) {\n    var qs = querySourceRaw(Id);\n    return querySourceConvert(qs);\n}\n"]}